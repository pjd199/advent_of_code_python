name: Compatability Check

on:
  workflow_dispatch:

  pull_request:
    types: [opened, edited, reopened]

  push:
    branches:
      - main

concurrency: 
  group: compatability${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Compatability Check
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.10', '3.11']
    steps:
      - name: Check out Respository
        uses: actions/checkout@v3

      - name: Setup up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      
      - name: Display python version
        run: python --version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          pip install -r requirements_CI_CD_check.txt
          pip install -r requirements_CI_CD_test.txt

      - name: Lint with ruff
        if: ${{ always() }}
        run: ruff check .

      - name: Check import order
        if: ${{ always() }}
        run: isort --check-only .

      - name: Checking docstrings
        if: ${{ always() }}
        run: pydoclint --config=pyproject.toml .

      - name: Static type check with mypy
        if: ${{ always() }}
        run: |
          mypy --strict .

      - name: Testing with pytest
        if: ${{ always() }}
        run: |
          pytest ./tests/unit ./tests/integration -n auto