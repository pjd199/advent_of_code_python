on:
  push:
    branches:
      - main
jobs:
  test-build-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Respository
        uses: actions/checkout@v3
      
      - name: Setup up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
          cache: "pip"
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 flake8-bandit
          pip install pytest pytest-xdist pytest-cov
          pip install mypy
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --output-file flake8-errors.txt
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --output-file flake8-warnings.txt
      
      - name: Upload flake errors artifact
        uses: actions/upload-artifact@v3
        with:
          path: |
            flake8-errors.txt

      - name: Upload flake warnings artifact
        uses: actions/upload-artifact@v3
        with:
          path: |
            flake8-warnings.txt

      - name: Static type check with mypy
        run: |
          mypy --strict ./advent_of_code/
      
      - name: Testing with pytest
        run: |
          pytest -n auto --cov --cov-report html:pytest_results
      
      - name: Upload pytest results artifact
        uses: actions/upload-artifact@v3
        with:
          path: |
            pytest_results/
             
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

      - name: Setup AWS SAM
        uses: aws-actions/setup-sam@v1
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
       
      - name: SAM build
        run: sam build
      
      - name: SAM deploy
        run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --stack-name advent-of-code-python --s3-bucket aws-sam-cli-managed-default-samclisourcebucket-1wh6zbny2z2lr --capabilities CAPABILITY_IAM --region eu-west-2
